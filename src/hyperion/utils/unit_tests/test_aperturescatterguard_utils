from unittest.mock import MagicMock, patch
from hyperion.utils.aperturescatterguard import load_default_aperture_scatterguard_positions_if_unset


@patch("AperturePositions.from_gda_beamline_params")
def test_if_aperture_scatterguard_positions_unset_then_defaults_loaded():
    asg = MagicMock()
    asg.aperture_positions = None

    load_default_aperture_scatterguard_positions_if_unset(asg)

    assert asg.load_aperture_positions.assert_called_once()


@patch("AperturePositions.from_gda_beamline_params")
def test_if_aperture_scatterguard_positions_unset_then_nothing_loaded():
    asg = MagicMock()
    asg.aperture_positions = MagicMock()

    load_default_aperture_scatterguard_positions_if_unset(asg)

    assert asg.load_aperture_positions.assert_not_called()
